[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "notification-app"
dynamic = ["version"]
description = "A web application for real-time blog notifications with Azure AD authentication and web push support"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [
    { name = "vakesz", email = "hello@vakesz.com" },
]
keywords = ["flask", "notifications", "azure-ad", "web-push", "blog-monitoring"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: Flask",
    "Topic :: Communications",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
]
dependencies = [
    "flask>=3.1.1",
    "Flask-WTF>=1.2.2",
    "Flask-Limiter>=3.12",
    "Flask-Cors>=6.0.1",
    "jinja2>=3.1.6",
    "pywebpush>=2.0.3",
    "requests>=2.32.4",
    "requests-ntlm>=1.3.0",
    "python-dotenv>=1.1.1",
    "werkzeug>=3.1.3",
    "msal>=1.32.3",
    "gunicorn>=23.0.0",
    "beautifulsoup4>=4.13.4",
    "python-dateutil>=2.9.0",
    "apscheduler>=3.11.0",
    "cryptography>=45.0.4",
]

[project.optional-dependencies]
dev = [
    "pre-commit>=3.0.0",
    "pytest>=8.4.1",
    "pytest-cov>=6.0.0",
    "black>=25.1.0",
    "ruff>=0.1.0",
]


[project.urls]
Homepage = "https://github.com/vakesz/notification_app"
Repository = "https://github.com/vakesz/notification_app"
Documentation = "https://github.com/vakesz/notification_app/blob/main/README.md"
"Bug Tracker" = "https://github.com/vakesz/notification_app/issues"

[tool.setuptools]
packages = ["app"]
include-package-data = true

[tool.setuptools.package-data]
app = ["web/static/**/*", "web/templates/**/*"]

[tool.setuptools.dynamic]
version = { attr = "app.__version__" }

[tool.black]
line-length = 120
target-version = ["py310"]
include = '\.pyi?$'

[tool.ruff]
line-length    = 120
target-version = "py310"
exclude        = ["build", "dist", ".venv", "__pycache__", ".git"]

# enabled rule codes
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "S",   # bandit security checks
    "N",   # pep8-naming
    "D",   # pydocstyle
    "A",   # flake8-builtins
    "COM", # flake8-commas
    "C90", # mccabe complexity
    "DTZ", # flake8-datetimez
    "EM",  # flake8-errmsg
    "FA",  # flake8-future-annotations
    "G",   # flake8-logging-format
    "ICN", # flake8-import-conventions
    "INP", # flake8-no-pep420
    "PIE", # flake8-pie
    "PL",  # pylint
    "PT",  # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "Q",   # flake8-quotes
    "RET", # flake8-return
    "RSE", # flake8-raise
    "RUF", # ruff-specific rules
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "TID", # flake8-tidy-imports
    "ARG", # flake8-unused-arguments
    "ERA", # eradicate
    "FBT", # flake8-boolean-trap
    "TRY", # tryceratops
    "PERF", # perflint
    "FURB", # refurb
    "LOG",  # flake8-logging
    "BLE",  # flake8-blind-except
]

# Additional settings
unfixable = ["F841", "F401", "ERA001"]  # Don't auto-fix unused variables, imports, or commented code
show-fixes = true

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.isort]
combine-as-imports = true
force-sort-within-sections = true
known-first-party = ["app"]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"

[tool.ruff.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends", "fastapi.Query", "fastapi.Path"]

[tool.ruff.pylint]
max-args = 5
max-branches = 12
max-returns = 6
max-statements = 50

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", "D104"]
"tests/*.py"  = ["S101", "PLR2004", "ANN", "D"]
"migrations/*.py" = ["D", "E501"]
"**/settings.py" = ["S105", "S106"]

[tool.ruff.flake8-bandit]
check-typed-exception = true

[tool.ruff.flake8-boolean-trap]
extend-allowed-calls = ["django.shortcuts.redirect", "pytest.param"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.flake8-type-checking]
runtime-evaluated-base-classes = ["pydantic.BaseModel"]

[tool.ruff.pyupgrade]
keep-runtime-typing = true
